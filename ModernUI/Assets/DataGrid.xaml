<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ms="http://schemas.microsoft.com/wpf/2008/toolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ModernUI;component/Assets/Button.xaml" />
        <ResourceDictionary Source="/ModernUI;component/Assets/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--左上角，全选按钮-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ms:DataGrid}, ResourceId=DataGridSelectAllButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0.2,0,0.8,0.5" />
    </Style>

    <!--列头-->
    <Style x:Key="{x:Type ms:DataGridColumnHeadersPresenter}" TargetType="{x:Type ms:DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ms:DataGridColumnHeadersPresenter}">
                    <Grid>
                        <ms:DataGridColumnHeader IsHitTestVisible="False" Name="PART_FillerColumnHeader"/>
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--列间横向拖拽器-->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--行间纵向拖拽器-->
    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                      Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--浮动列头样式，拖拽列移动(交换列)时出现-->
    <Style x:Key="ColumnFloatingHeaderStyle" TargetType="{x:Type Control}">
        <Setter Property="Opacity" Value="0.6"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding ="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--列头下拉分隔-->
    <Style x:Key="ColumnHeaderDropSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource DataGridDropSeparator}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--行-->
    <Style x:Key="{x:Type ms:DataGridRow}" TargetType="{x:Type ms:DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="#FFdc000c" Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ms:DataGridRow}">
                    <Border x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ms:SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ms:DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <ms:DataGridDetailsPresenter  ms:SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type ms:DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static ms:DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static ms:SelectiveScrollingOrientation.Vertical}}"
                                                       Grid.Column="1" Grid.Row="1"
                                                       Visibility="{TemplateBinding DetailsVisibility}" />

                            <ms:DataGridRowHeader ms:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                  Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                                                  Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ms:DataGrid}}, Path=HeadersVisibility, Converter={x:Static ms:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static ms:DataGridHeadersVisibility.Row}}"/>
                        </ms:SelectiveScrollingGrid>
                    </Border>

                    <!--鼠标滑过，背景变色效果-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ms:DataGridCellsPresenter}" TargetType="{x:Type ms:DataGridCellsPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ms:DataGridCellsPresenter}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--单元格-->
    <Style x:Key="{x:Type ms:DataGridCell}" TargetType="{x:Type ms:DataGridCell}">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="5,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ms:DataGridCell}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <!--鼠标滑过，背景变色效果-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundHover}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--列头-->
    <Style x:Key="{x:Type ms:DataGridColumnHeader}" TargetType="{x:Type ms:DataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
        <Setter Property="BorderBrush" Value="Silver" />
        <Setter Property="BorderThickness" Value="0.2,0,0.8,0.5" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultTableFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultTableFontSize}" />
        <Setter Property="Padding" Value="1,2,1,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ms:DataGridColumnHeader}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding ="{TemplateBinding Padding}"
>
                            <Grid x:Name="containerGrid" Margin="5" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path x:Name="SortArrow"
                                      Grid.Column="1"
                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Width="8" Height="6"  Margin="2,0,2,0"
                                      Stretch="Fill" Opacity="0.5" Fill="{TemplateBinding Foreground}"
                                      RenderTransformOrigin="0.5,0.4"
                                      Visibility="Hidden"
                                      Data="M0,0 L1,0 0.5,1 z" />
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--行首-->
    <Style x:Key="{x:Type ms:DataGridRowHeader}" TargetType="{x:Type ms:DataGridRowHeader}">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Width" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ms:DataGridRowHeader}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding ="{TemplateBinding Padding}">

                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                <Control SnapsToDevicePixels="false"
                                         Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ms:DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                                         Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type ms:DataGridRow}}, Path=ValidationErrorTemplate}" />
                            </StackPanel>
                        </Border>
                        <Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top"
                               Style="{StaticResource RowHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_BottomHeaderGripper"
                               VerticalAlignment="Bottom"
                               Style="{StaticResource RowHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
            </Trigger>
            <Trigger Property="IsRowSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundSelected}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundSelected}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--表格-->
    <Style x:Key="{x:Type ms:DataGrid}" TargetType="{x:Type ms:DataGrid}">
        <!--<Setter Property="IsReadOnly"  Value="True"/>-->
        <Setter Property="Background" Value="{DynamicResource DataGridBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}"/>
        <Setter Property="BorderThickness" Value="0.2,0.8,0.8,0.2" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="DragIndicatorStyle" Value="{StaticResource ColumnFloatingHeaderStyle}" />
        <Setter Property="DropLocationIndicatorStyle" Value="{StaticResource ColumnHeaderDropSeparatorStyle}" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <!--<Setter Property="ScrollViewer.PanningMode" Value="Both"/>-->
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ms:DataGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer Focusable="false" Name="DG_ScrollViewer">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Button Command="{x:Static ms:DataGrid.SelectAllCommand}"
                                                Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ms:DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ms:DataGrid}, ResourceId=DataGridSelectAllButtonStyle}}"
                                                Focusable="false"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ms:DataGrid}}, Path=HeadersVisibility, Converter={x:Static ms:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static ms:DataGridHeadersVisibility.All}}" />
                                        <ms:DataGridColumnHeadersPresenter Grid.Row="0" Grid.Column="1" 
                                                                        Name="PART_ColumnHeadersPresenter"
                                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ms:DataGrid}}, Path=HeadersVisibility, Converter={x:Static ms:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static ms:DataGridHeadersVisibility.Column}}"/>

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2"
                                                                Grid.Column="0"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar Grid.Row="1" Grid.Column="2" Name="PART_VerticalScrollBar"
                                                   Orientation="Vertical"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ms:DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Grid.Column="1"
                                                       Name="PART_HorizontalScrollBar"
                                                       Orientation="Horizontal"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>